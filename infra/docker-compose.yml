services:
  postgres:
    image: postgres:16-alpine
    container_name: edx_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: edx_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: ["redis-server","--save","","--appendonly","no"]
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ../services/api
      dockerfile: Dockerfile
    container_name: edx_api
    env_file: ../.env
    ports:
      - "${API_PORT:-4000}:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:4000/api/health 003e/dev/null"]
      interval: 5s
      timeout: 5s
      retries: 20

  web:
    build:
      context: ../apps/web
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE=${VITE_API_BASE:-/api}
    container_name: edx_web
    env_file: ../.env
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - web_build:/web_out

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: edx_nginx
    ports:
      - "80:80"
    volumes:
      - web_build:/usr/share/nginx/html:ro
    depends_on:
      web:
        condition: service_started
      api:
        condition: service_healthy

volumes:
  pgdata:
  web_build:
